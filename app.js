// Configuraci√≥n de MQTT con WebSockets
const broker = 'wss://broker.emqx.io:8084/mqtt'; // URL de WebSocket seguro
const topic = 'sensor/soilMoisture'; // T√≥pico MQTT

// Crear un cliente MQTT
const client = new Paho.MQTT.Client("broker.emqx.io", 8084, "/mqtt");

// Funci√≥n de conexi√≥n
client.connect({
    onSuccess: onConnect,
    onFailure: onFailure,
    useSSL: true
});

// Funci√≥n que se ejecuta al conectar
function onConnect() {
    console.log('‚úÖ Conectado al broker MQTT');
    client.subscribe(topic, {
        onSuccess: onSubscribe,
        onFailure: onSubscribeFailure
    });
}

// Funci√≥n que se ejecuta al fallar la conexi√≥n
function onFailure(response) {
    console.error('‚ùå Fallo al conectar al broker MQTT:', response.errorMessage);
}

// Funci√≥n que se ejecuta al suscribirse
function onSubscribe() {
    console.log('‚úÖ Suscrito al t√≥pico:', topic);
}

// Funci√≥n que se ejecuta al fallar la suscripci√≥n
function onSubscribeFailure(response) {
    console.error('‚ùå Fallo al suscribirse al t√≥pico:', response.errorMessage);
}

// Funci√≥n que se ejecuta al recibir un mensaje
client.onMessageArrived = function (message) {
    console.log('üì© Mensaje recibido:', message.payloadString);
    document.getElementById('soil-moisture').innerText = message.payloadString;
};

// Funci√≥n que se ejecuta al desconectar
client.onConnectionLost = function (responseObject) {
    if (responseObject.errorCode !== 0) {
        console.log('‚ö†Ô∏è Desconexi√≥n de MQTT:', responseObject.errorMessage);
    }
};
